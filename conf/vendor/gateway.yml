service:
  interface:
    type: str
    default: localhost
    doc: |
      Address of network interfaces to bind native service for incoming
      connections. Special value `0.0.0.0` means all network interfaces.
  port:
    type: int
    default: 5011
    doc: TCP port to listen for incoming connections.
  cors:
    type: bool
    default: false
    doc: When true, Cross-Origin Resource Sharing (CORS) headers are enabled.
  debug:
    type: bool
    default: false
    doc: Enable debug mode
  log_flags:
    type: list
    content: str
    default:
    - ALL
    choices:
    - slurmweb
    - rfl
    - werkzeug
    - urllib3
    - racksdb
    - ALL
    doc: List of log flags to enable. Special value `ALL` enables all log flags.
  debug_flags:
    type: list
    content: str
    default:
    - slurmweb
    choices:
    - slurmweb
    - rfl
    - werkzeug
    - urllib3
    - racksdb
    - ALL
    doc: |
      List of debug flags to enable. Special value `ALL` enables all debug
      flags.

ui:
  host:
    type: uri
    doc: Public URL to access the gateway component
    ex: https://dashboard.corp.com/
  enabled:
    type: bool
    default: true
    doc: Serve frontend application with gateway
  path:
    type: path
    default: /usr/share/slurm-web/frontend
    doc: Path to Slurm-web frontend application
  templates:
    type: path
    default: /usr/share/slurm-web/templates
    doc: |
      Path HTML templates folder.
  message_template:
    type: path
    default: message.html.j2
    doc: |
      Path to service message HTML template relative to the templates folder.
  message_login:
    type: path
    default: /etc/slurm-web/messages/login.md
    doc: |
      Path to service message presented to users below the login form. Slurm-web
      loads the file if it exists. However, it does not fail if file is not
      found, it is skipped silently. The content must be formatted in markdown.
  hide_denied:
    type: bool
    default: false
    doc: |
      Control if users can see the list of denied clusters, ie. clusters on
      which they do not have any permission. When false, these clusters are
      visible and marked as denied for these users. When true, these clusters
      are hidden to these users.
  racksdb_rows_labels:
    type: bool
    default: false
    doc: |
      Enable racks rows labels in RacksDB infrastructure graphical
      representations.
  racksdb_racks_labels:
    type: bool
    default: false
    doc: |
      Enable racks labels in RacksDB infrastructure graphical representations.

agents:
  url:
    type: list
    content: uri
    required: true
    doc: List of Slurm-web agents URL
    ex:
    - https://cluster1/agent
    - https://cluster2/agent
  version:
    type: str
    default: 4.1.0
    doc: Version of Slurm-web agent API
  racksdb_version:
    type: str
    default: 0.4.0
    doc: |
      Minimal supported version of RacksDB API

      CAUTION: You SHOULD NOT change this parameter unless you really know what
      you are doing. This parameter is more intented for Slurm-web developers
      rather than end users. Slurm-web is officially tested and validated with
      the default value only.
authentication:
  enabled:
    type: bool
    default: false
    doc: Determine if authentication is enabled
  method:
    type: str
    choices:
    - ldap
    default: ldap
    doc: Authentification method

ldap:
  uri:
    type: uri
    doc: URI to connect to LDAP server
    ex: ldap://localhost
  cacert:
    type: path
    doc: |
      Path to CA certificate used to validate signature of LDAP server
      certificate when using ldaps or STARTTLS protocols. When not defined, the
      default system CA certificates is used.
    ex: /path/to/certificate.pem
  starttls:
    type: bool
    default: false
    doc: Use STARTTLS protocol to negociate TLS connection with LDAP server
  user_base:
    type: str
    doc: Base DN for users entries
    ex: ou=people,dc=example,dc=org
  group_base:
    type: str
    doc: Base DN for group entries
    ex: ou=group,dc=example,dc=org
  user_class:
    type: str
    default: posixAccount
    doc: Class of user entries
  user_name_attribute:
    type: str
    default: uid
    doc: User entry attribute for user name
  user_fullname_attribute:
    type: str
    default: cn
    doc: User entry attribute for full name
  user_primary_group_attribute:
    type: str
    default: gidNumber
    doc: User entry attribute for primary group ID
  group_name_attribute:
    type: str
    default: cn
    doc: Group entry attribute for name
  group_object_classes:
    type: list
    content: str
    default:
    - posixGroup
    - groupOfNames
    doc: List of LDAP object classes for groups
  lookup_user_dn:
    type: bool
    default: true
    doc: |
      Lookup user DN in the scope of user base subtree. If disable, LDAP
      directory is not requested to search for the user in the subtree before
      authentication, and the user DN are considered to be in the form of
      `<user_name_attribute>=$login,<user_base>` (ex:
      `uid=$login,ou=people,dc=example,dc=org`). This notably implies all
      users entries to be at the first level under the user base in the tree.
  bind_dn:
    type: str
    doc: |
      DN used to bind to the LDAP server. When this parameter is not defined,
      access to LDAP directory is performed anonymously.
    ex: cn=system,ou=people,dc=example,dc=org
  bind_password:
    type: password
    doc: |
      Password of bind DN. This parameter is required when `bind_dn` is
      defined.
    ex: SECR3T
  restricted_groups:
    type: list
    content: str
    doc: |
      List of users groups allowed to connect. When this parameter is not
      defined, all users in LDAP directory are authorized to sign in.
    ex:
    - admins
    - biology

jwt:
  key:
    type: path
    default: /var/lib/slurm-web/jwt.key
    doc: Path to private key for JWT signature
  duration:
    type: int
    default: 1
    doc: JWT validity duration in days
  algorithm:
    type: str
    choices:
    # Full list available in PyJWT documentation:
    # https://pyjwt.readthedocs.io/en/latest/algorithms.html
    - HS256
    - HS384
    - HS512
    - ES256
    - ES256K
    - ES384
    - ES512
    - RS256
    - RS384
    - RS512
    - PS256
    - PS384
    - PS512
    - EdDSA
    default: HS256
    doc: Cryptographic algorithm used to sign JWT
  audience:
    type: str
    default: slurm-web
    doc: |
      Audience defined in generated JWT and expected in JWT provided by clients
