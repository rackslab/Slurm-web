---
# This file contains the configuration settings definition for Slurm-web agent
# in RFL ConfigurationLoader format.
service:
  cluster:
    type: str
    required: true
    doc: Name of cluster served by agent
    ex: atlas
  interface:
    type: str
    default: localhost
    doc: Interface address to bind for incoming connections
  port:
    type: int
    default: 5012
    doc: TCP port to listen for incoming connections
  cors:
    type: bool
    default: false
    doc: When true, Cross-Origin Resource Sharing (CORS) headers are enabled.
  debug:
    type: bool
    default: false
    doc: Enable debug mode
  log_flags:
    type: list
    content: str
    default:
    - ALL
    choices:
    - slurmweb
    - rfl
    - werkzeug
    - urllib3
    - racksdb
    - ALL
    doc: List of log flags to enable. Special value `ALL` enables all log flags.
  debug_flags:
    type: list
    content: str
    default:
    - slurmweb
    choices:
    - slurmweb
    - rfl
    - werkzeug
    - urllib3
    - racksdb
    - ALL
    doc: |
      List of debug flags to enable. Special value `ALL` enables all debug
      flags.

slurmrestd:
  uri:
    type: uri
    default: unix:///run/slurmrestd/slurmrestd.socket
    doc: |
      URI to slurmrestd HTTP server. It can either be in the form
      http://host:port for TCP/IP server or unix:///path/to/slurmrestd.socket
      for Unix socket.
  socket:
    type: path
    deprecated:
      section: slurmrestd
      parameter: uri
    doc: Path to slurmrestd Unix socket.
  auth:
    type: str
    choices:
    - local
    - jwt
    default: local
    doc: |
      Authentication method with slurmrestd. Local authentication is only
      supported with Unix socket. With this method, Slurm-web agent must run
      with the same UID as slurmrestd service (eg. slurm system user). JWT
      authentication is supported by both TCP/IP and Unix sockets. With this
      method, `jwt_token` parameter must be set.
  jwt_user:
    type: str
    default: slurm
    doc: The user name used used in HTTP headers with JWT authentication.
  jwt_token:
    type: password
    doc: |
      The JSON Web Token (JWT) used in HTTP headers with JWT authentication.
      This token can be generated with `scontrol token`.
  version:
    type: str
    default: '0.0.40'
    doc: |
      Slurm REST API version.

      CAUTION: You SHOULD NOT change this parameter unless you really know what
      you are doing. This parameter is more intented for Slurm-web developers
      rather than end users. Slurm-web is officially tested and validated with
      the default value only.

filters:
  jobs:
    type: list
    content: str
    default:
    - job_id
    - user_name
    - account
    - job_state
    - state_reason
    - partition
    - priority
    - qos
    - cpus
    - node_count
    - nodes
    doc: |
      List of jobs fields selected in slurmrestd API when retrieving a list of
      jobs, all other fields arefiltered out.
  acctjob:
    type: list
    content: str
    default:
    - association
    - comment
    - derived_exit_code
    - exit_code
    - group
    - name
    - nodes
    - partition
    - priority
    - qos
    - script
    - state
    - steps
    - submit_line
    - time
    - tres
    - used_gres
    - user
    - wckey
    - working_directory
    doc: |
      List of slurmdbd job fields selected in slurmrestd API when retrieving a
      unique job, all other fields are filtered out.
  ctldjob:
    type: list
    content: str
    default:
    - accrue_time
    - batch_flag
    - command
    - cpus
    - current_working_directory
    - exclusive
    - last_sched_evaluation
    - node_count
    - partition
    - standard_error
    - standard_input
    - standard_output
    - tasks
    - tres_req_str
    doc: |
      List of slurmctld job fields selected in slurmrestd API when retrieving a
      unique job, all other fields are filtered out.
  nodes:
    type: list
    content: str
    default:
    - name
    - cpus
    - sockets
    - cores
    - real_memory
    - state
    - reason
    - partitions
    - alloc_cpus
    - alloc_idle_cpus
    doc: |
      List of nodes fields selected in slurmrestd API, all other fields are
      filtered out.
  node:
    type: list
    content: str
    default:
    - name
    - architecture
    - operating_system
    - boot_time
    - last_busy
    - cpus
    - sockets
    - cores
    - threads
    - real_memory
    - state
    - reason
    - partitions
    - alloc_cpus
    - alloc_idle_cpus
    - alloc_memory
    doc: |
      List of invidual node fields selected in slurmrestd API, all other fields
      are filtered out.
  partitions:
    type: list
    content: str
    default:
    - name
    - node_sets
    doc: |
      List of partitions fields selected in slurmrestd API, all other fields are
      filtered out.
  qos:
    type: list
    content: str
    default:
    - name
    - description
    - priority
    - flags
    - limits
    doc: |
      List of qos fields selected in slurmrestd API, all other fields are
      filtered out.
  reservations:
    type: list
    content: str
    default:
    - name
    - users
    - accounts
    - node_list
    - node_count
    - start_time
    - end_time
    - flags
    doc: |
      List of reservations fields selected in slurmrestd API, all other fields
      are filtered out.
  accounts:
    type: list
    content: str
    default:
    - name
    doc: |
      List of accounts fields selected in slurmrestd API, all other fields are
      filtered out.

policy:
  definition:
    type: path
    default: /usr/share/slurm-web/conf/policy.yml
    doc: Path to RBAC policy definition file with available actions
  vendor_roles:
    type: path
    default: /usr/share/slurm-web/conf/policy.ini
    doc: |
      Path to default vendor RBAC policy definition file with roles and
      permitted actions
  roles:
    type: path
    default: /etc/slurm-web/policy.ini
    doc: |
      Path to site RBAC policy definition file with roles and permitted actions

jwt:
  key:
    type: path
    default: /var/lib/slurm-web/jwt.key
    doc: Path to private key for JWT signature
  algorithm:
    type: str
    choices:
    # Full list available in PyJWT documentation:
    # https://pyjwt.readthedocs.io/en/latest/algorithms.html
    - HS256
    - HS384
    - HS512
    - ES256
    - ES256K
    - ES384
    - ES512
    - RS256
    - RS384
    - RS512
    - PS256
    - PS384
    - PS512
    - EdDSA
    default: HS256
    doc: Cryptographic algorithm used to sign JWT
  audience:
    type: str
    default: slurm-web
    doc: |
      Audience defined in generated JWT and expected in JWT provided by clients

racksdb:
  enabled:
    type: bool
    default: true
    doc: |
      Control if RacksDB integration feature for advanced visualization of
      resources is enabled.
  # The default values in this section must be synchronized with RacksDB library
  #Â defaults.
  db:
    type: path
    default: /var/lib/racksdb
    doc: Path to RacksDB database
  schema:
    type: path
    default: /usr/share/racksdb/schemas/racksdb.yml
    doc: Path to RacksDB database schema
  extensions:
    type: path
    default: /etc/racksdb/extensions.yml
    doc: Path to site-specific RacksDB schema extensions
  drawings_schema:
    type: path
    default: /usr/share/racksdb/schemas/drawings.yml
    doc: Path to RacksDB database schema
  infrastructure:
    type: str
    doc: |
      Name of the infrastructure for the cluster in RacksDB. By default, the
      cluster name is used.
    ex: atlas
  tags:
    type: list
    content: str
    default:
    - compute
    doc: List of tags applied to compute nodes in RacksDB database

cache:
  enabled:
    type: bool
    default: false
    doc: Determine if caching is enabled
  host:
    type: str
    default: localhost
    doc: Hostname of Redis cache server
  port:
    type: int
    default: 6379
    doc: TCP port of Redis cache server
  password:
    type: password
    doc: |
      Password to connect to protected Redis server. When this parameter is
      not defined, Redis server is accessed without password.
    ex: SECR3T
  version:
    type: int
    default: 1800
    doc: Expiration delay in seconds for Slurm version in cache
  jobs:
    type: int
    default: 30
    doc: Expiration delay in seconds for jobs in cache
  job:
    type: int
    default: 10
    doc: Expiration delay in seconds for invidual jobs in cache
  nodes:
    type: int
    default: 30
    doc: Expiration delay in seconds for nodes in cache
  node:
    type: int
    default: 10
    doc: Expiration delay in seconds for node in cache
  partitions:
    type: int
    default: 60
    doc: Expiration delay in seconds for partitions in cache
  qos:
    type: int
    default: 60
    doc: Expiration delay in seconds for QOS in cache
  reservations:
    type: int
    default: 60
    doc: Expiration delay in seconds for reservations in cache
  accounts:
    type: int
    default: 60
    doc: Expiration delay in seconds for accounts in cache

metrics:
  enabled:
    type: bool
    default: false
    doc: |
      Determine if metrics feature and integration with Prometheus (or
      compatible) is enabled.
  restrict:
    type: list
    content: network
    default:
    - 127.0.0.0/24
    - ::1/128
    doc: |
      Restricted list of IP networks permitted to request metrics.
  host:
    type: uri
    default: http://localhost:9090
    doc: |
      URL of Prometheus server (or compatible) to requests metrics with PromQL.
  job:
    type: str
    default: slurm
    doc: Name of Prometheus job which scrapes Slurm-web metrics.
